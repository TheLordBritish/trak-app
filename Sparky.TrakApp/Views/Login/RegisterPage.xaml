<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Sparky.TrakApp.Views.Login.RegisterPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:behaviors="http://prismlibrary.com"
    xmlns:controls="clr-namespace:Sparky.TrakApp.Controls"
    xmlns:d="http://xamarin.com/schemas/2014/forms/design"
    xmlns:extensions="clr-namespace:Sparky.TrakApp.Extensions;assembly=Sparky.TrakApp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    AutomationId="RegisterPage"
    mc:Ignorable="d">
    <ContentPage.Content>
        <ScrollView Padding="35">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <!--  App logo  -->
                <Image
                    Grid.Row="0"
                    Grid.Column="0"
                    Source="logo.png" />
                <!--  Subtitle  -->
                <StackLayout
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2">
                    <ScrollView
                        Margin="0,-50,0,0"
                        HorizontalOptions="Fill"
                        HorizontalScrollBarVisibility="Never"
                        Orientation="Horizontal"
                        VerticalOptions="Start"
                        VerticalScrollBarVisibility="Never">
                        <Label Style="{StaticResource SubtitleLabelStyle}" Text="{extensions:Translate Subtitle}" />
                    </ScrollView>
                    <!--  Page title  -->
                    <Label
                        Margin="0,20,0,15"
                        Style="{StaticResource HeaderLabelStyle}"
                        Text="{extensions:Translate RegisterPageTitle}" />
                    <!--  Username label and entry box.  -->
                    <Label Style="{StaticResource EntryLabelStyle}" Text="{extensions:Translate RegisterPageUsername}" />
                    <Frame
                        Padding="0"
                        BackgroundColor="{StaticResource TrakWhite}"
                        CornerRadius="0"
                        HasShadow="False">
                        <Frame.Triggers>
                            <DataTrigger
                                Binding="{Binding Username.IsValid}"
                                TargetType="Frame"
                                Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Frame.Triggers>
                        <Frame
                            Margin="1"
                            Padding="0"
                            BackgroundColor="{StaticResource TrakPrimaryBlue}"
                            CornerRadius="0"
                            HasShadow="False">
                            <controls:CustomEntry AutomationId="RegisterPageUsernameEntry" Text="{Binding Username.Value}">
                                <controls:CustomEntry.Behaviors>
                                    <behaviors:EventToCommandBehavior
                                        Command="{Binding ClearValidationCommand}"
                                        CommandParameter="Username"
                                        EventName="Focused" />
                                </controls:CustomEntry.Behaviors>
                            </controls:CustomEntry>
                        </Frame>
                    </Frame>
                    <Label
                        IsEnabled="{Binding Username.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                        IsVisible="{Binding Username.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                        Style="{StaticResource ValidationLabelStyle}"
                        Text="{Binding Username.FirstError}" />
                    <!--  Email address label and entry box.  -->
                    <Label Style="{StaticResource EntryLabelStyle}" Text="{extensions:Translate RegisterPageEmailAddress}" />
                    <Frame
                        Padding="0"
                        BackgroundColor="{StaticResource TrakWhite}"
                        CornerRadius="0"
                        HasShadow="False">
                        <Frame.Triggers>
                            <DataTrigger
                                Binding="{Binding EmailAddress.IsValid}"
                                TargetType="Frame"
                                Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Frame.Triggers>
                        <Frame
                            Margin="1"
                            Padding="0"
                            BackgroundColor="{StaticResource TrakPrimaryBlue}"
                            CornerRadius="0"
                            HasShadow="False">
                            <controls:CustomEntry AutomationId="RegisterPageEmailAddressEntry" Text="{Binding EmailAddress.Value}">
                                <controls:CustomEntry.Behaviors>
                                    <behaviors:EventToCommandBehavior
                                        Command="{Binding ClearValidationCommand}"
                                        CommandParameter="EmailAddress"
                                        EventName="Focused" />
                                </controls:CustomEntry.Behaviors>
                            </controls:CustomEntry>
                        </Frame>
                    </Frame>
                    <Label
                        IsEnabled="{Binding EmailAddress.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                        IsVisible="{Binding EmailAddress.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                        Style="{StaticResource ValidationLabelStyle}"
                        Text="{Binding EmailAddress.FirstError}" />
                    <!--  Password label and entry box.  -->
                    <Label Style="{StaticResource EntryLabelStyle}" Text="{extensions:Translate RegisterPagePassword}" />
                    <Frame
                        Padding="0"
                        BackgroundColor="{StaticResource TrakWhite}"
                        CornerRadius="0"
                        HasShadow="False">
                        <Frame.Triggers>
                            <DataTrigger
                                Binding="{Binding Password.IsValid}"
                                TargetType="Frame"
                                Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Frame.Triggers>
                        <Frame
                            Margin="1"
                            Padding="0"
                            BackgroundColor="{StaticResource TrakPrimaryBlue}"
                            CornerRadius="0"
                            HasShadow="False">
                            <controls:CustomEntry
                                AutomationId="RegisterPagePasswordEntry"
                                IsPassword="True"
                                Text="{Binding Password.Value}">
                                <controls:CustomEntry.Behaviors>
                                    <behaviors:EventToCommandBehavior
                                        Command="{Binding ClearValidationCommand}"
                                        CommandParameter="Password"
                                        EventName="Focused" />
                                </controls:CustomEntry.Behaviors>
                            </controls:CustomEntry>
                        </Frame>
                    </Frame>
                    <Label
                        IsEnabled="{Binding Password.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                        IsVisible="{Binding Password.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                        Style="{StaticResource ValidationLabelStyle}"
                        Text="{Binding Password.FirstError}" />
                    <!--  Password rules.  -->
                    <StackLayout>
                        <Label FontAttributes="Bold" Text="{extensions:Translate RegisterPagePasswordRulesHeader}" />
                        <Label FontSize="Small" Text="- 8 characters" />
                        <Label FontSize="Small" Text="- 1 upper case letter" />
                        <Label FontSize="Small" Text="- 1 lower case letter" />
                        <Label FontSize="Small" Text="- 1 number" />
                    </StackLayout>
                    <!--  Confirm password label and entry box.  -->
                    <Label Style="{StaticResource EntryLabelStyle}" Text="{extensions:Translate RegisterPageConfirmPassword}" />
                    <Frame
                        Padding="0"
                        BackgroundColor="{StaticResource TrakWhite}"
                        CornerRadius="0"
                        HasShadow="False">
                        <Frame.Triggers>
                            <DataTrigger
                                Binding="{Binding ConfirmPassword.IsValid}"
                                TargetType="Frame"
                                Value="False">
                                <Setter Property="BackgroundColor" Value="Red" />
                            </DataTrigger>
                        </Frame.Triggers>
                        <Frame
                            Margin="1"
                            Padding="0"
                            BackgroundColor="{StaticResource TrakPrimaryBlue}"
                            CornerRadius="0"
                            HasShadow="False">
                            <controls:CustomEntry
                                AutomationId="RegisterPageConfirmPasswordEntry"
                                IsPassword="True"
                                Text="{Binding ConfirmPassword.Value}">
                                <controls:CustomEntry.Behaviors>
                                    <behaviors:EventToCommandBehavior
                                        Command="{Binding ClearValidationCommand}"
                                        CommandParameter="ConfirmPassword"
                                        EventName="Focused" />
                                </controls:CustomEntry.Behaviors>
                            </controls:CustomEntry>
                        </Frame>
                    </Frame>
                    <Label
                        IsEnabled="{Binding ConfirmPassword.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                        IsVisible="{Binding ConfirmPassword.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                        Style="{StaticResource ValidationLabelStyle}"
                        Text="{Binding ConfirmPassword.FirstError}" />
                    <!--  Display error messages if anything went wrong.  -->
                    <Label
                        Margin="0,5"
                        AutomationId="RegisterPageErrorMessage"
                        IsEnabled="{Binding IsError}"
                        IsVisible="{Binding IsError}"
                        Style="{StaticResource ValidationLabelStyle}"
                        Text="{Binding ErrorMessage}" />
                    <!--  Sign up button and activity indicator.  -->
                    <Button
                        Margin="0,20,0,0"
                        AutomationId="RegisterPageSignUpButton"
                        Command="{Binding RegisterCommand}"
                        IsVisible="{Binding IsBusy, Converter={StaticResource NegateBooleanConverter}}"
                        Style="{StaticResource ConfirmationButtonStyle}"
                        Text="{extensions:Translate RegisterPageSignUp}" />
                    <ActivityIndicator
                        Margin="0,20,0,0"
                        IsRunning="{Binding IsBusy}"
                        IsVisible="{Binding IsBusy}" />
                    <!--  Privacy policy and terms of use label.  -->
                    <Label
                        Margin="0,10"
                        AutomationId="RegisterPagePrivacyPolicyLabel"
                        FontSize="Small"
                        HorizontalOptions="Center"
                        Text="{extensions:Translate RegisterPagePrivacyPolicyAndTermsOfUse}" />
                    <!--  Log in label.  -->
                    <Label
                        Margin="0,10"
                        FontSize="Small"
                        HorizontalOptions="Center">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span FontSize="Small" Text="{extensions:Translate RegisterPageAlreadyHaveAccount}" />
                                <Span
                                    AutomationId="RegisterPageLogInLabel"
                                    FontAttributes="Bold"
                                    FontSize="Small"
                                    Text="{extensions:Translate RegisterPageLogIn}">
                                    <Span.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding LoginCommand}" NumberOfTapsRequired="1" />
                                    </Span.GestureRecognizers>
                                </Span>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </StackLayout>
            </Grid>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>