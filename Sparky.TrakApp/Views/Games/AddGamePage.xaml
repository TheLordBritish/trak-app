<?xml version="1.0" encoding="utf-8" ?>
<pages:PopupPage
    x:Class="Sparky.TrakApp.Views.Games.AddGamePage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:behaviors="http://prismlibrary.com"
    xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup">
    <pages:PopupPage.Content>
        <StackLayout
            Margin="20,0"
            Padding="15"
            BackgroundColor="{StaticResource TrakPrimaryBlue}"
            VerticalOptions="Center">
            <Label
                Margin="0,15,0,0"
                FontAttributes="Bold"
                Text="Platform" />
            <Frame
                Padding="0"
                BackgroundColor="{StaticResource TrakWhite}"
                CornerRadius="0"
                HasShadow="False">
                <Frame.Triggers>
                    <DataTrigger
                        Binding="{Binding SelectedPlatform.IsValid}"
                        TargetType="Frame"
                        Value="False">
                        <Setter Property="BackgroundColor" Value="Red" />
                    </DataTrigger>
                </Frame.Triggers>
                <Frame
                    Margin="1"
                    Padding="0"
                    BackgroundColor="{StaticResource TrakPrimaryBlue}"
                    CornerRadius="0"
                    HasShadow="False">
                    <Picker
                        ItemDisplayBinding="{Binding Name}"
                        ItemsSource="{Binding Platforms}"
                        SelectedItem="{Binding SelectedPlatform.Value}">
                        <Picker.Behaviors>
                            <behaviors:EventToCommandBehavior
                                Command="{Binding ClearValidationCommand}"
                                CommandParameter="Platform"
                                EventName="Focused" />
                        </Picker.Behaviors>
                    </Picker>
                </Frame>
            </Frame>
            <Label
                AutomationId="AddGamePagePlatformErrorLabel"
                IsEnabled="{Binding SelectedPlatform.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                IsVisible="{Binding SelectedPlatform.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                Style="{StaticResource ValidationLabelStyle}"
                Text="{Binding SelectedPlatform.FirstError}" />
            <Label
                Margin="0,15,0,0"
                FontAttributes="Bold"
                Text="Status" />
            <Frame
                Padding="0"
                BackgroundColor="{StaticResource TrakWhite}"
                CornerRadius="0"
                HasShadow="False">
                <Frame.Triggers>
                    <DataTrigger
                        Binding="{Binding SelectedStatus.IsValid}"
                        TargetType="Frame"
                        Value="False">
                        <Setter Property="BackgroundColor" Value="Red" />
                    </DataTrigger>
                </Frame.Triggers>
                <Frame
                    Margin="1"
                    Padding="0"
                    BackgroundColor="{StaticResource TrakPrimaryBlue}"
                    CornerRadius="0"
                    HasShadow="False">
                    <Picker
                        ItemDisplayBinding="{Binding ., Converter={StaticResource EnumDescriptionConverter}}"
                        ItemsSource="{Binding Statuses}"
                        SelectedItem="{Binding SelectedStatus.Value}">
                        <Picker.Behaviors>
                            <behaviors:EventToCommandBehavior
                                Command="{Binding ClearValidationCommand}"
                                CommandParameter="Status"
                                EventName="Focused" />
                        </Picker.Behaviors>
                    </Picker>
                </Frame>
            </Frame>
            <Label
                AutomationId="AddGamePageStatusErrorLabel"
                IsEnabled="{Binding SelectedStatus.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                IsVisible="{Binding SelectedStatus.IsValid, Converter={StaticResource NegateBooleanConverter}}"
                Style="{StaticResource ValidationLabelStyle}"
                Text="{Binding SelectedStatus.FirstError}" />
            <!--  Display error messages if anything went wrong.  -->
            <Label
                Margin="0,5"
                AutomationId="AddGamePageErrorMessage"
                IsEnabled="{Binding IsError}"
                IsVisible="{Binding IsError}"
                Style="{StaticResource ValidationLabelStyle}"
                Text="{Binding ErrorMessage}" />
            <Button
                Margin="0,15,0,0"
                Command="{Binding AddGameCommand}"
                IsVisible="{Binding IsLoading, Converter={StaticResource NegateBooleanConverter}}"
                Style="{StaticResource PrimaryButtonStyle}"
                Text="Add" />
            <ActivityIndicator
                Margin="0,15,0,0"
                IsRunning="{Binding IsLoading}"
                IsVisible="{Binding IsLoading}" />
        </StackLayout>
    </pages:PopupPage.Content>
</pages:PopupPage>