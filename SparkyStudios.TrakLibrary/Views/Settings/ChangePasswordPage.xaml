<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="SparkyStudios.TrakLibrary.Views.Settings.ChangePasswordPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:SparkyStudios.TrakLibrary.Controls;assembly=SparkyStudios.TrakLibrary"
    xmlns:extensions="clr-namespace:SparkyStudios.TrakLibrary.Extensions;assembly=SparkyStudios.TrakLibrary"
    xmlns:settings="clr-namespace:SparkyStudios.TrakLibrary.ViewModel.Settings;assembly=SparkyStudios.TrakLibrary.ViewModel"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    Title="{extensions:Translate ChangePasswordPageTitle}"
    x:DataType="settings:ChangePasswordViewModel"
    BackgroundColor="{StaticResource TrakPrimaryBlue}">
    <ContentPage.Content>
        <ScrollView Padding="20">
            <StackLayout>
                <!--  App logo  -->
                <Image
                    Margin="0,20,0,0"
                    HorizontalOptions="StartAndExpand"
                    Source="logo.png" />

                <!--  Page title  -->
                <Label
                    Margin="0,25,0,20"
                    LineBreakMode="WordWrap"
                    Style="{StaticResource TitleLabelStyle}"
                    Text="{extensions:Translate ChangePasswordPageTitle}" />

                <!--  Current password label and entry box.  -->
                <Label Style="{StaticResource EntryLabelStyle}" Text="{extensions:Translate ChangePasswordPageCurrentPassword}" />
                <controls:BorderedEntry
                    AutomationId="ChangePasswordPageCurrentPasswordEntry"
                    BorderColor="{StaticResource TrakWhite}"
                    BorderThickness="4"
                    IsPassword="True"
                    Text="{Binding CurrentPassword.Value}">
                    <controls:BorderedEntry.Behaviors>
                        <xct:EventToCommandBehavior
                            Command="{Binding ClearValidationCommand}"
                            CommandParameter="CurrentPassword"
                            EventName="Focused" />
                    </controls:BorderedEntry.Behaviors>
                    <controls:BorderedEntry.Triggers>
                        <DataTrigger
                            Binding="{Binding CurrentPassword.IsValid}"
                            TargetType="controls:BorderedEntry"
                            Value="False">
                            <Setter Property="BorderColor" Value="{StaticResource TrakPrimaryPurple}" />
                        </DataTrigger>
                    </controls:BorderedEntry.Triggers>
                </controls:BorderedEntry>
                <!--  Current password validation errors  -->
                <Label
                    IsEnabled="{Binding CurrentPassword.IsValid, Converter={StaticResource InvertedBoolConverter}}"
                    IsVisible="{Binding CurrentPassword.IsValid, Converter={StaticResource InvertedBoolConverter}}"
                    Style="{StaticResource ValidationLabelStyle}"
                    Text="{Binding CurrentPassword.FirstError}" />

                <!--  New password label and entry box.  -->
                <Label
                    Margin="0,20,0,0"
                    Style="{StaticResource EntryLabelStyle}"
                    Text="{extensions:Translate ChangePasswordPageNewPassword}" />
                <controls:BorderedEntry
                    AutomationId="ChangePasswordPageNewPasswordEntry"
                    BorderColor="{StaticResource TrakWhite}"
                    BorderThickness="4"
                    IsPassword="True"
                    Text="{Binding NewPassword.Value}">
                    <controls:BorderedEntry.Behaviors>
                        <xct:EventToCommandBehavior
                            Command="{Binding ClearValidationCommand}"
                            CommandParameter="NewPassword"
                            EventName="Focused" />
                    </controls:BorderedEntry.Behaviors>
                    <controls:BorderedEntry.Triggers>
                        <DataTrigger
                            Binding="{Binding NewPassword.IsValid}"
                            TargetType="controls:BorderedEntry"
                            Value="False">
                            <Setter Property="BorderColor" Value="{StaticResource TrakPrimaryPurple}" />
                        </DataTrigger>
                    </controls:BorderedEntry.Triggers>
                </controls:BorderedEntry>
                <Label
                    AutomationId="ChangePasswordPageNewPasswordErrorLabel"
                    IsEnabled="{Binding NewPassword.IsValid, Converter={StaticResource InvertedBoolConverter}}"
                    IsVisible="{Binding NewPassword.IsValid, Converter={StaticResource InvertedBoolConverter}}"
                    Style="{StaticResource ValidationLabelStyle}"
                    Text="{Binding NewPassword.FirstError}" />

                <!--  Confirm new password label and entry box.  -->
                <Label
                    Margin="0,20,0,0"
                    Style="{StaticResource EntryLabelStyle}"
                    Text="{extensions:Translate ChangePasswordPageConfirmNewPassword}" />
                <controls:BorderedEntry
                    AutomationId="ChangePasswordPageConfirmNewPasswordEntry"
                    BorderColor="{StaticResource TrakWhite}"
                    BorderThickness="4"
                    IsPassword="True"
                    Text="{Binding ConfirmNewPassword.Value}">
                    <controls:BorderedEntry.Behaviors>
                        <xct:EventToCommandBehavior
                            Command="{Binding ClearValidationCommand}"
                            CommandParameter="CurrentPassword"
                            EventName="Focused" />
                    </controls:BorderedEntry.Behaviors>
                    <controls:BorderedEntry.Triggers>
                        <DataTrigger
                            Binding="{Binding ConfirmNewPassword.IsValid}"
                            TargetType="controls:BorderedEntry"
                            Value="False">
                            <Setter Property="BorderColor" Value="{StaticResource TrakPrimaryPurple}" />
                        </DataTrigger>
                    </controls:BorderedEntry.Triggers>
                </controls:BorderedEntry>
                <Label
                    AutomationId="ChangePasswordPagePageConfirmNewPasswordErrorLabel"
                    IsEnabled="{Binding ConfirmNewPassword.IsValid, Converter={StaticResource InvertedBoolConverter}}"
                    IsVisible="{Binding ConfirmNewPassword.IsValid, Converter={StaticResource InvertedBoolConverter}}"
                    Style="{StaticResource ValidationLabelStyle}"
                    Text="{Binding ConfirmNewPassword.FirstError}" />

                <!--  Password rules label.  -->
                <Label
                    Margin="0,10,0,0"
                    Style="{StaticResource ValidationLabelStyle}"
                    Text="{extensions:Translate PasswordRules}" />

                <!--  Display error messages if anything went wrong.  -->
                <Label
                    Margin="0,5"
                    AutomationId="ChangePasswordPageErrorMessage"
                    IsEnabled="{Binding IsError}"
                    IsVisible="{Binding IsError}"
                    Style="{StaticResource ValidationLabelStyle}"
                    Text="{Binding ErrorMessage}" />

                <!--  Verify button and activity indicator.  -->
                <Button
                    Margin="0,20,0,0"
                    AutomationId="ChangePasswordPageSendButton"
                    Command="{Binding ChangeCommand}"
                    IsVisible="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}"
                    Style="{StaticResource PrimaryButtonStyle}"
                    Text="{extensions:Translate ChangePasswordPageChange}" />
                <ActivityIndicator
                    Margin="0,20,0,0"
                    IsRunning="{Binding IsLoading}"
                    IsVisible="{Binding IsLoading}" />
            </StackLayout>
            <!-- </Grid> -->
        </ScrollView>
    </ContentPage.Content>
</ContentPage>